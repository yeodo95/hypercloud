
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: clusterservicebrokers.servicecatalog.k8s.io
  labels:
    svcat: "true"
spec:
  group: servicecatalog.k8s.io
  names:
    kind: ClusterServiceBroker
    listKind: ClusterServiceBrokerList
    plural: clusterservicebrokers
    singular: clusterservicebroker
    categories:
      - all
      - svcat
  additionalPrinterColumns:
    - name: URL
      type: string
      JSONPath: .spec.url
    - name: Status
      type: string
      JSONPath: .status.lastConditionState
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: ClusterServiceBroker represents an entity that provides ClusterServiceClasses for use in the service catalog.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: 'Non-namespaced.  The name of this resource in etcd is in ObjectMeta.Name. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          type: object
        spec:
          description: Spec defines the behavior of the broker.
          properties:
            authInfo:
              description: AuthInfo contains the data that the service catalog should use to authenticate with the ClusterServiceBroker.
              properties:
                basic:
                  description: ClusterBasicAuthConfigprovides configuration for basic authentication.
                  properties:
                    secretRef:
                      description: "SecretRef is a reference to a Secret containing information the catalog should use to authenticate to this ServiceBroker. \n Required at least one of the fields: - Secret.Data[\"username\"] - username used for authentication - Secret.Data[\"password\"] - password or token needed for authentication"
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                        namespace:
                          description: Namespace of the referent.
                          type: string
                      type: object
                  type: object
                bearer:
                  description: ClusterBearerTokenAuthConfig provides configuration to send an opaque value as a bearer token. The value is referenced from the 'token' field of the given secret.  This value should only contain the token value and not the `Bearer` scheme.
                  properties:
                    secretRef:
                      description: "SecretRef is a reference to a Secret containing information the catalog should use to authenticate to this ServiceBroker. \n Required field: - Secret.Data[\"token\"] - bearer token for authentication"
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                        namespace:
                          description: Namespace of the referent.
                          type: string
                      type: object
                  type: object
              type: object
            caBundle:
              description: CABundle is a PEM encoded CA bundle which will be used to validate a Broker's serving certificate.
              format: byte
              type: string
            catalogRestrictions:
              description: CatalogRestrictions is a set of restrictions on which of a broker's services and plans have resources created for them.
              properties:
                serviceClass:
                  description: 'ServiceClass represents a selector for plans, used to filter catalog re-lists. The format is expected to be <property><conditional><requirement>. <property> is allowed to be one of the following: spec.externalName, spec.externalID. <conditional> is allowed to be one of the following: ==, !=, in, notin. <requirement> will be a string value if == or != are used, otherwise it will be a set of string values if in or notin are used.'
                  items:
                    type: string
                  type: array
                servicePlan:
                  description: 'ServicePlan represents a selector for classes, used to filter catalog re-lists. The format is expected to be <property><conditional><requirement>. <property> is allowed to be one of the following: spec.externalName, spec.externalID, spec.free, spec.clusterServiceClass.name. <conditional> is allowed to be one of the following: ==, !=, in, notin. <requirement> will be a string value if == or != are used, otherwise it will be a set of string values if in or notin are used.'
                  items:
                    type: string
                  type: array
              type: object
            insecureSkipTLSVerify:
              description: InsecureSkipTLSVerify disables TLS certificate verification when communicating with this Broker. This is strongly discouraged.  You should use the CABundle instead.
              type: boolean
            relistBehavior:
              description: RelistBehavior specifies the type of relist behavior the catalog should exhibit when relisting ServiceClasses available from a broker.
              enum:
                - Duration
                - Manual
              type: string
            relistDuration:
              description: RelistDuration is the frequency by which a controller will relist the broker when the RelistBehavior is set to ServiceBrokerRelistBehaviorDuration. Users are cautioned against configuring low values for the RelistDuration, as this can easily overload the controller manager in an environment with many brokers. The actual interval is intrinsically governed by the configured resync interval of the controller, which acts as a minimum bound. For example, with a resync interval of 5m and a RelistDuration of 2m, relists will occur at the resync interval of 5m.
              type: string
            relistRequests:
              description: RelistRequests is a strictly increasing, non-negative integer counter that can be manually incremented by a user to manually trigger a relist.
              format: int64
              type: integer
            url:
              description: URL is the address used to communicate with the ServiceBroker.
              type: string
          required:
          - url
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  subresources:
    status: {}